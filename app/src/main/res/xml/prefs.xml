<?xml version="1.0" encoding="utf-8"?>
<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">

    <SwitchPreference
        android:defaultValue="true"
        android:key="port_pref"
        android:summary="Ensure ports are not next to controlled resource"
        android:title="Ports" />

    <SwitchPreference
        android:defaultValue="false"
        android:key="size_pref"
        android:summary="Use expanded edition board (30 tiles)"
        android:title="Expanded" />

    <SwitchPreference
        android:defaultValue="true"
        android:key="bal_pref"
        android:summary="Balance resources' total probability"
        android:title="Balance" />

    <ListPreference
        android:defaultValue="0"
        android:dependency="bal_pref"
        android:entries="@array/bal_entries"
        android:entryValues="@array/bal_values"
        android:key="bal_tolerance_pref"
        android:summary="Tolerance for balance setting"
        android:title="Tolerance" />

    <SwitchPreference
        android:defaultValue="true"
        android:key="dist_res_pref"
        android:summary="Distribute resources (prevent adjacent identical resources)"
        android:title="Resource Distribution" />

    <SwitchPreference
        android:defaultValue="true"
        android:key="dist_num_pref"
        android:summary="Distribute numbers (prevent adjacent identical numbers)"
        android:title="Number Distribution" />

    <SwitchPreference
        android:defaultValue="true"
        android:dependency="dist_num_pref"
        android:key="dist_val_pref"
        android:summary="Distribute values (prevent adjacent identical roll probabilities)"
        android:title="Value Distribution" />

    <!--

    case R.id.rBtnPorts:
    port = true;
    item.setChecked(true);
    return true;
    case R.id.rBtnNoPorts:
    port = false;
    item.setChecked(true);
    return true;

    case R.id.chkBal:
    bal = !item.isChecked();
    item.setChecked(bal);
    MenuItem t = _menu.findItem(R.id.rBtnTight);
    MenuItem m = _menu.findItem(R.id.rBtnMed);
    MenuItem l = _menu.findItem(R.id.rBtnLoose);
    t.setEnabled(bal);
    m.setEnabled(bal);
    l.setEnabled(bal);
    return true;
    case R.id.rBtnTight:
    tolerance = Board.TIGHT;
    item.setChecked(true);
    return true;
    case R.id.rBtnMed:
    tolerance = Board.MED;
    item.setChecked(true);
    return true;
    case R.id.rBtnLoose:
    tolerance = Board.LOOSE;
    item.setChecked(true);
    return true;

    case R.id.rBtnStd:
    expanded = false;
    item.setChecked(true);
    return true;
    case R.id.rBtnExp:
    expanded = true;
    item.setChecked(true);
    return true;

    case R.id.chkDistRes:
    dist[0] = !item.isChecked();
    item.setChecked(dist[0]);
    return true;
    case R.id.chkDistNum:
    dist[1] = !item.isChecked();
    item.setChecked(dist[1]);
    return true;
    case R.id.chkDistVal:
    dist[2] = !item.isChecked();
    item.setChecked(dist[2]);
    MenuItem n = _menu.findItem(R.id.chkDistNum);
    if (dist[2]) {
    wasSet = n.isChecked();
    n.setChecked(true);
    } else {
    n.setChecked(wasSet);
    }
    n.setEnabled(!dist[2]);
    return true;
    -->
</PreferenceScreen>